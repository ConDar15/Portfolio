#!/usr/bin/python3

AZ='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
ceaser = lambda t, k : ''.join(map(lambda c : c in AZ and chr((ord(c) + ord(k.upper()) - 130) % 26 + 65) or c, t.upper()))
ceaser.__doc__ = """Outputs the ceaser or shift cipher of text t where A -> parameter k"""

if __name__ == '__main__':
	import argparse
	parser = argparse.ArgumentParser()
	
	parser.add_argument('-d', '--decrypt', action='store_true', default=False)
	parser.add_argument('ptxt', default='THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG')
	parser.add_argument('key', default='M')
	
	args = parser.parse_args()

	args.key = args.key.upper()
	if args.key not in AZ:
		args.key = 'M'

	if args.decrypt:
		print(ceaser(args.ptxt, chr((26 - (ord(args.key) - 65) % 26 + 65))))
	else:
		print(ceaser(args.ptxt, args.key))
